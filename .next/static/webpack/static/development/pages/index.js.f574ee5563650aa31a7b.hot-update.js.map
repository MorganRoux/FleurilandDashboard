{"version":3,"file":"static/webpack/static/development/pages/index.js.f574ee5563650aa31a7b.hot-update.js","sources":["webpack:///./src/components/Orders/OrderItem.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { useStylesStatusSelector, colors } from './Orders.style';\nimport axios from 'axios';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\n\ntype OrderItemProps = {\n    order: any\n}\n\nconst OrderItem: React.FC<OrderItemProps> = ({order}) => {\n    return (\n            order && (\n            <TableRow key={order.id}>\n            <IdCell>{order.id}</IdCell>\n            <NameCell>{order.billing.first_name} {order.billing.last_name} </NameCell>\n            <PriceCell>{order.total}â‚¬</PriceCell>\n            <StatusCell order={order} />\n            {order.shipping_lines[0] && \n            <MethodCell>{order.shipping_lines[0].method_title}</MethodCell>}\n            </TableRow>\n            )\n    );\n}\n\nconst IdCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst NameCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst StatusCell: React.FC<OrderItemProps> = ({order}) => {\n    const [status, setStatus] = useState(order.status);\n\n    const handleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const status = event.target.value;\n        const rep = await axios.put(`http://localhost:3000/api/updateOrder?id=${order.id}&status=${status}`);\n        if (rep.data.status == event.target.value)\n            setStatus(event.target.value as string);\n      };\n \n    return (\n        <TableCell style={{ borderRadius:10 }}>\n            <StatusSelector status={status} handleChange={handleChange}/>\n        </TableCell>\n    );\n}\n\nconst MethodCell: React.FC = (props) => {\n    return (\n        <TableCell align=\"center\">\n            <Tooltip \n                title={props.children}\n                TransitionComponent={Fade} \n                TransitionProps={{ timeout: 600 }}\n            >\n            {props.children == \"Retrait en point de vente\" ? (\n                    <HouseOutlinedIcon fontSize='large'/>\n            ) : (\n                <LocalShippingIcon fontSize='large'/>\n            )}\n            </Tooltip>\n        </TableCell>\n    );\n}\n\nexport default OrderItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}