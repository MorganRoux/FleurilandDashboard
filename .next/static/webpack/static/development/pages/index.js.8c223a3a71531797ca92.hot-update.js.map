{"version":3,"file":"static/webpack/static/development/pages/index.js.8c223a3a71531797ca92.hot-update.js","sources":["webpack:///./src/components/Orders/OrderItem.tsx","webpack:///./src/components/Orders/Orders.style.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { useStylesStatusSelector, colors } from './Orders.style';\n\ntype OrderItemProps = {\n    order: any\n}\n\nconst OrderItem: React.FC<OrderItemProps> = (props) => {\n    return (\n        <TableRow key={props.order.id}>\n            <IdCell>{props.order.id}</IdCell>\n            <NameCell>{props.order.billing.first_name} {props.order.billing.last_name} </NameCell>\n            <PriceCell>{props.order.total}€</PriceCell>\n            <StatusCell>{props.order.status}</StatusCell>\n            <MethodCell>{props.order.shipping_lines[0].method_title}</MethodCell>\n        </TableRow>\n    );\n}\n\nconst IdCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst NameCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst StatusCell: React.FC = (props) => {\n    let text = \"\"\n    const [status, setStatus] = useState(props.children.toString());\n    const [color, setColor] = useState(colors[\"processing\"]);\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setStatus(event.target.value as string);\n        setColor(colors[event.target.value]);\n      };\n  \n/*\n    if (props.children.toString() == \"processing\"){\n        color = \"Coral\";\n        text = \"En cours\";\n    }\n    else if (props.children.toString() == \"completed\"){\n        color = \"LightGreen\";\n        text = \"Terminée\";\n    }\n    else if (props.children.toString() == \"cancelled\"){\n        color = \"WhiteSmoke\";\n        text = \"Annulée\";\n    }\n    else if (props.children.toString() == \"refunded\"){\n        color = \"#bad095\";\n        text = \"Remboursée\";\n    }\n    else {\n        color = \"White\";\n        text = props.children.toString();\n    }\n    */\n    return (\n        // <TableCell style={{backgroundColor:`${color}`,  borderRadius:10}}>\n        <TableCell style={{borderRadius:10}}>\n            <StatusSelector status={status} handleChange={handleChange} color={color}/>\n        </TableCell>\n    );\n}\n\nconst MethodCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nexport default OrderItem;","import { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\n\nexport const useStylesOrders = makeStyles((theme: Theme) => {\n    return (\n    createStyles({\n      root: {\n        padding: theme.spacing(3),\n      }\n    }))\n});\n\n\n/*==================================*/\nexport const colors = {\n  \"processing\": {\n    '--background-start': '#2196F3',\n    '--background-end': '#21CBF3',\n    '--box-shadow': 'rgba(33, 203, 243, .3)',\n  } as React.CSSProperties,\n  \"completed\": {\n    '--background-start': '#FE6B8B',\n    '--background-end': '#FF8E53',\n    '--box-shadow': 'rgba(255, 105, 135, .3)',\n  } as React.CSSProperties\n}\n\nexport const useStylesStatusSelector = makeStyles((theme: Theme) => {\n  return (\n    createStyles ({\n        root: {\n          backgroundColor: \"blue\",\n        },\n        filled: {\n          backgroundColor: 'var(--background-start) !important'\n        }\n    })\n  )\n})"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AADA;AADA;AAKA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAaA;AACA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAJA;AASA;;;;A","sourceRoot":""}