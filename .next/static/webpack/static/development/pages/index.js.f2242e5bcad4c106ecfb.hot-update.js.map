{"version":3,"file":"static/webpack/static/development/pages/index.js.f2242e5bcad4c106ecfb.hot-update.js","sources":["webpack:///./node_modules/@material-ui/icons/HouseOutlined.js","webpack:///./node_modules/@material-ui/icons/LocalShipping.js","webpack:///./src/components/Orders/OrderItem.tsx","webpack:///./src/components/Orders/OrderTable.tsx","webpack:///./src/components/Orders/StatusSelector.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M19 9.3V4h-3v2.6L12 3 2 12h3v8h6v-6h2v6h6v-8h3l-3-2.7zM17 18h-2v-6H9v6H7v-7.81l5-4.5 5 4.5V18z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M10 10h4c0-1.1-.9-2-2-2s-2 .9-2 2z\"\n})), 'HouseOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'LocalShipping');\n\nexports.default = _default;","import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport axios from 'axios';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport { withSnackbar, WithSnackbarProps } from 'notistack';\n\ninterface OrderItemProps extends WithSnackbarProps {\n    order: any,\n}\n\nconst OrderItem: React.FC<OrderItemProps> = (props) => {\n    const { order } = props;\n    return (\n            order && (\n            <TableRow key={order.id}>\n            <IdCell {...props }/>\n            <NameCell {...props }/>\n            <PriceCell {...props }/>\n            <StatusCell {...props }/>\n            <DateCell {...props} />\n            <MethodCell {...props }/>\n            </TableRow>\n            )\n    );\n}\n\nconst IdCell: React.FC<OrderItemProps> = ({ order }) => {\n    return (\n        <TableCell>{order.id}</TableCell>\n    );\n}\n\nconst NameCell: React.FC<OrderItemProps> = ({ order }) => {\n    const firstName = order.billing.first_name.charAt(0).toUpperCase() + order.billing.first_name.slice(1).toLowerCase();\n    const lastName = order.billing.last_name.charAt(0).toUpperCase() + order.billing.last_name.slice(1).toLowerCase();\n    return (\n        <TableCell>{firstName} {lastName}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC<OrderItemProps> = ({ order }) => {\n    return (\n        <TableCell>{order.total}€</TableCell>\n    );\n}\n\nconst StatusCell: React.FC<OrderItemProps> = ({order, enqueueSnackbar}) => {\n    const [status, setStatus] = useState(order.status);\n\n    const handleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const status = event.target.value;\n        const rep = await axios.put(`http://localhost:3000/api/updateOrder?id=${order.id}&status=${status}`);\n        console.log(\"ok\")\n        if (rep.data.status == event.target.value) {\n            setStatus(event.target.value as string);\n            enqueueSnackbar('Mise à jour réussie', { \n                variant: 'success',\n                anchorOrigin: { vertical: 'bottom', horizontal: 'right'}\n            });\n        }\n        else\n            enqueueSnackbar('Erreur de connexion au serveur', { \n                variant: 'error',\n                anchorOrigin: { vertical: 'bottom', horizontal: 'right'}\n            });\n      };\n \n    return (\n        <TableCell style={{ borderRadius:10 }}>\n            <StatusSelector status={status} handleChange={handleChange}/>\n        </TableCell>\n    );\n}\n\nconst DateCell: React.FC<OrderItemProps> = ({ order }) => {\n    const date:Date = new Date(order.date_created);\n    const min = date.getMinutes().toString().padStart(2, \"0\");\n    const hh = date.getHours().toString().padStart(2, \"0\");\n    const dd = date.getDate().toString().padStart(2, \"0\");\n    const mm = (date.getMonth()+1).toString().padStart(2, \"0\");\n    const yyyy = date.getFullYear().toString().padStart(2, \"0\");\n    return (\n        <TableCell>{`${dd}-${mm}-${yyyy} ${hh}:${min}`}</TableCell>\n    );\n}\n\nconst MethodCell: React.FC<OrderItemProps> = ({ order }) => {\n    const method = order.shipping_lines[0] ? order.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n    return (\n        <TableCell align=\"center\">\n            { (!!method) && (\n                <Tooltip \n                    title={method}\n                    TransitionComponent={Fade} \n                    TransitionProps={{ timeout: 600 }}\n                >\n                    <div>\n                        {method == \"Retrait en point de vente\" && (\n                                <HouseOutlinedIcon fontSize='large'/>\n                        )}\n                        {method == \"Livraison chez vous\" && (\n                            <LocalShippingIcon fontSize='large'/>\n                        )}\n                </div>\n                </Tooltip>\n            )}\n        </TableCell>\n    );\n}\n\nexport default withSnackbar(OrderItem);","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\n\ntype OrdersProps = {\n    orders:any\n}\n\nconst OrderTable: React.FC<OrdersProps> = ({orders}) => {\n    return (\n        <Table stickyHeader size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Numéro de Commande</TableCell>\n                    <TableCell>Nom</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Date de commande</TableCell>\n                    <TableCell align=\"center\">Expédition</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {orders.map((order) => {\n                    return (\n                    <OrderItem \n                        key = {order.id}\n                        order={order}\n                    />)}\n                )}\n            </TableBody>\n        </Table>\n)}\n   \nexport default OrderTable;","import React, {useContext, useEffect, useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useStylesStatusSelector, colors } from './Orders.style';\n\ntype StatusSelectorProps = {\n    status: string,\n    handleChange\n}\n\nconst StatusSelector:React.FC<StatusSelectorProps> = (props) => {\n    const classes = useStylesStatusSelector();\n    const colorStart = colors[props.status]['--background-start'];\n    const colorEnd = colors[props.status]['--background-end'];\n    return (\n       \n        <Select\n        value={props.status}\n        onChange={props.handleChange}\n        classes={{root: classes.root}}\n        disableUnderline\n        //style={colors[props.status]}\n        style={{\n            background: `linear-gradient(45deg, ${colorStart} 30%, ${colorEnd} 90%)`,\n            borderRadius: 10,\n            border: 0,\n            display: 'block',\n            padding: '10px 10px 10px 10px',\n        }}\n        // inputProps= {{\n        //     padding: '15px 20px 15px 20px',\n        // }}\n        >\n        <MenuItem value=\"cancelled\">Annulée</MenuItem>\n        <MenuItem value=\"processing\">En Cours</MenuItem>\n        <MenuItem value=\"completed\">Terminée</MenuItem>\n        <MenuItem value=\"refunded\">Remboursée</MenuItem>\n        </Select>\n    );\n}\n\nexport default StatusSelector;\n"],"mappings":"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","sourceRoot":""}