{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderTable.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\nimport { TableSortLabel } from '@material-ui/core';\n\nconst OrderHead = ({\n  orderBy,\n  orderDir\n}) => {\n  const heads = [\"N°\", \"Nom\", \"Total\", \"Status\", \"Date de commande\", \"Expédition\"];\n\n  const createSortHandler = id => null;\n\n  return __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, heads.map((name, id) => __jsx(TableCell, {\n    key: id,\n    align: name == \"Expédition\" ? \"center\" : \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, __jsx(TableSortLabel, {\n    active: orderBy === id,\n    direction: orderBy === id ? orderDir : 'asc',\n    onClick: createSortHandler(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, name)))));\n};\n\nconst OrderTable = props => {\n  const {\n    orders\n  } = props;\n  const {\n    0: orderBy,\n    1: setOrderBy\n  } = useState();\n  const {\n    0: orderDir,\n    1: setOrderDir\n  } = useState('asc');\n  return __jsx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(OrderHead, {\n    orderBy: orderBy,\n    orderDir: orderDir,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, orders.map(order => {\n    return __jsx(OrderItem, {\n      key: order.id,\n      order: order,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    });\n  }))));\n};\n\nexport default OrderTable;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderTable.tsx"],"names":["React","useState","Table","TableBody","TableCell","TableHead","TableRow","OrderItem","TableSortLabel","OrderHead","orderBy","orderDir","heads","createSortHandler","id","map","name","OrderTable","props","orders","setOrderBy","setOrderDir","order"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAUA,MAAMC,SAA8B,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC5D,QAAMC,KAAc,GAAE,CAAC,IAAD,EAAO,KAAP,EAAc,OAAd,EAAuB,QAAvB,EAAiC,kBAAjC,EAAqD,YAArD,CAAtB;;AACA,QAAMC,iBAAiB,GAAIC,EAAD,IAAQ,IAAlC;;AACA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAcF,EAAd,KACX,MAAC,SAAD;AACI,IAAA,GAAG,EAAEA,EADT;AAEI,IAAA,KAAK,EAAIE,IAAI,IAAE,YAAN,GAAqB,QAArB,GAAgC,MAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,cAAD;AACI,IAAA,MAAM,EAAEN,OAAO,KAAKI,EADxB;AAEI,IAAA,SAAS,EAAEJ,OAAO,KAAKI,EAAZ,GAAiBH,QAAjB,GAA4B,KAF3C;AAGI,IAAA,OAAO,EAAEE,iBAAiB,CAACC,EAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCE,IALD,CAJJ,CADC,CADL,CADJ,CADJ;AAoBH,CAvBD;;AAyBA,MAAMC,UAAgC,GAAIC,KAAD,IAAW;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAM;AAAA,OAACR,OAAD;AAAA,OAAUU;AAAV,MAAwBnB,QAAQ,EAAtC;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWU;AAAX,MAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AAEA,SACI,0BAASiB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACA,MAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAER,OAApB;AAA6B,IAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,MAAM,CAACJ,GAAP,CAAYO,KAAD,IAAW;AACnB,WACA,MAAC,SAAD;AACI,MAAA,GAAG,EAAIA,KAAK,CAACR,EADjB;AAEI,MAAA,KAAK,EAAEQ,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAII,GALP,CADL,CAFJ,CADA,CADJ;AAeF,CApBF;;AAsBA,eAAeL,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\nimport { TableSortLabel } from '@material-ui/core';\n\ninterface TableProps {\n    orders:any\n}\n\ninterface HeadProps {\n    orderBy: number\n    orderDir: any\n}\nconst OrderHead: React.FC<HeadProps> = ({orderBy, orderDir}) => {\n    const heads:string[]= [\"N°\", \"Nom\", \"Total\", \"Status\", \"Date de commande\", \"Expédition\"];\n    const createSortHandler = (id) => null;\n    return (\n        <TableHead>\n            <TableRow>\n                {heads.map((name:string, id: number) => (\n                <TableCell \n                    key={id}\n                    align = {name==\"Expédition\" ? \"center\" : \"left\"}\n                >\n                    <TableSortLabel\n                        active={orderBy === id}\n                        direction={orderBy === id ? orderDir : 'asc'}\n                        onClick={createSortHandler(id)}\n                    >\n                    {name}\n                    </TableSortLabel>\n                </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst OrderTable: React.FC<TableProps> = (props) => {\n    const { orders } = props;\n    const [orderBy, setOrderBy] = useState();\n    const [orderDir, setOrderDir] = useState('asc');\n\n    return (\n        <div {...props}>\n        <Table stickyHeader size=\"small\">\n            <OrderHead orderBy={orderBy} orderDir={orderDir}/>\n            <TableBody>\n                {orders.map((order) => {\n                    return (\n                    <OrderItem \n                        key = {order.id}\n                        order={order}\n                    />)}\n                )}\n            </TableBody>\n        </Table>\n        </div>\n)}\n   \nexport default OrderTable;"]},"metadata":{},"sourceType":"module"}