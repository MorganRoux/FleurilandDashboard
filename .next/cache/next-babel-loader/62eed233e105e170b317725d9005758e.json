{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport axios from 'axios';\n\nvar OrderItem = function OrderItem(_ref) {\n  var order = _ref.order;\n  return order && __jsx(TableRow, {\n    key: order.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(IdCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, order.id), __jsx(NameCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, order.billing.first_name, \" \", order.billing.last_name, \" \"), __jsx(PriceCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, order.total, \"\\u20AC\"), __jsx(StatusCell, {\n    order: order,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), order.shipping_lines[0] && __jsx(MethodCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, order.shipping_lines[0].method_title));\n};\n\nvar IdCell = function IdCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar NameCell = function NameCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar PriceCell = function PriceCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar StatusCell = function StatusCell(_ref2) {\n  var order = _ref2.order;\n\n  var _useState = useState(order.status),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    var id, status, rep;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = \"12156\";\n            status = event.target.value;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3000/api/updateOrder?id=\".concat(id, \"&status=\").concat(status)));\n\n          case 4:\n            rep = _context.sent;\n            if (rep.data.status == event.target.value) setStatus(event.target.value);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(TableCell, {\n    style: {\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(StatusSelector, {\n    status: status,\n    handleChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MethodCell = function MethodCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default OrderItem;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx"],"names":["React","useState","TableCell","TableRow","StatusSelector","axios","OrderItem","order","id","billing","first_name","last_name","total","shipping_lines","method_title","IdCell","props","children","NameCell","PriceCell","StatusCell","status","setStatus","handleChange","event","target","value","put","rep","data","borderRadius","MethodCell"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { useStylesStatusSelector, colors } from './Orders.style';\nimport axios from 'axios';\n\ntype OrderItemProps = {\n    order: any\n}\n\nconst OrderItem: React.FC<OrderItemProps> = ({order}) => {\n    return (\n            order && (\n            <TableRow key={order.id}>\n            <IdCell>{order.id}</IdCell>\n            <NameCell>{order.billing.first_name} {order.billing.last_name} </NameCell>\n            <PriceCell>{order.total}â‚¬</PriceCell>\n            <StatusCell order={order} />\n            {order.shipping_lines[0] && \n            <MethodCell>{order.shipping_lines[0].method_title}</MethodCell>}\n            </TableRow>\n            )\n    );\n}\n\nconst IdCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst NameCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst StatusCell: React.FC<OrderItemProps> = ({order}) => {\n    const [status, setStatus] = useState(order.status);\n\n    const handleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const id = \"12156\";\n        const status = event.target.value;\n        const rep = await axios.put(`http://localhost:3000/api/updateOrder?id=${id}&status=${status}`);\n        if (rep.data.status == event.target.value)\n            setStatus(event.target.value as string);\n      };\n \n    return (\n        <TableCell style={{ borderRadius:10 }}>\n            <StatusSelector status={status} handleChange={handleChange}/>\n        </TableCell>\n    );\n}\n\nconst MethodCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nexport default OrderItem;"]},"metadata":{},"sourceType":"module"}