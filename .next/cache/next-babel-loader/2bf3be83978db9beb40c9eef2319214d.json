{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { useDeviceType } from '../helper/useDeviceType';\nimport 'typeface-roboto';\nexport default function ExtendedApp({\n  Component,\n  pageProps,\n  query,\n  userAgent\n}) {\n  const deviceType = useDeviceType(userAgent);\n  return __jsx(Component, _extends({}, pageProps, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }));\n}\n\nExtendedApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  const {\n    req,\n    query\n  } = appContext.ctx;\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  return _objectSpread({}, appProps, {\n    userAgent,\n    query\n  });\n};","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/pages/_app.tsx"],"names":["React","App","useDeviceType","ExtendedApp","Component","pageProps","query","userAgent","deviceType","getInitialProps","appContext","appProps","req","ctx","headers","navigator"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAGA,OAAO,iBAAP;AAEA,eAAe,SAASC,WAAT,CAAqB;AAChCC,EAAAA,SADgC;AAEhCC,EAAAA,SAFgC;AAGhCC,EAAAA,KAHgC;AAIhCC,EAAAA;AAJgC,CAArB,EAKV;AACD,QAAMC,UAAU,GAAGN,aAAa,CAACK,SAAD,CAAhC;AACA,SAEA,MAAC,SAAD,eAAeF,SAAf;AAA0B,IAAA,UAAU,EAAEG,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFA;AAID;;AAEDL,WAAW,CAACM,eAAZ,GAA8B,MAAMC,UAAN,IAAoB;AAChD,QAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACQ,eAAJ,CAAoBC,UAApB,CAAvB;AACA,QAAM;AAAEE,IAAAA,GAAF;AAAON,IAAAA;AAAP,MAAiBI,UAAU,CAACG,GAAlC;AACA,QAAMN,SAAS,GAAGK,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAH,GAA+BC,SAAS,CAACR,SAA9D;AACA,2BAAYI,QAAZ;AAAsBJ,IAAAA,SAAtB;AAAiCD,IAAAA;AAAjC;AACD,CALD","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { useDeviceType } from '../helper/useDeviceType';\nimport { GlobalProvider } from '../context/global/global.provider';\n\nimport 'typeface-roboto';\n\nexport default function ExtendedApp({\n    Component,\n    pageProps,\n    query,\n    userAgent,\n  }) {\n    const deviceType = useDeviceType(userAgent);\n    return (\n\n    <Component {...pageProps} deviceType={deviceType} />\n    );\n  }\n  \n  ExtendedApp.getInitialProps = async appContext => {\n    const appProps = await App.getInitialProps(appContext);\n    const { req, query } = appContext.ctx;\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n    return { ...appProps, userAgent, query };\n  };"]},"metadata":{},"sourceType":"module"}