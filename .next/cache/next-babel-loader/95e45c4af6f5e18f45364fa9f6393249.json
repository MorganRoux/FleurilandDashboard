{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport axios from 'axios';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport { withSnackbar } from 'notistack';\n\nvar OrderItem = function OrderItem(_ref) {\n  var order = _ref.order,\n      enqueueSnackbar = _ref.enqueueSnackbar;\n  return order && __jsx(TableRow, {\n    key: order.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(IdCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, order.id), __jsx(NameCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, order.billing.first_name, \" \", order.billing.last_name, \" \"), __jsx(PriceCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, order.total, \"\\u20AC\"), __jsx(StatusCell, {\n    order: order,\n    enqueueSnackbar: enqueueSnackbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), order.shipping_lines[0] && __jsx(MethodCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, order.shipping_lines[0].method_title));\n};\n\nvar IdCell = function IdCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar NameCell = function NameCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar PriceCell = function PriceCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar StatusCell = function StatusCell(_ref2) {\n  var order = _ref2.order,\n      enqueueSnackbar = _ref2.enqueueSnackbar;\n\n  var _useState = useState(order.status),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    var status, rep;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            status = event.target.value;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3000/api/updateOrder?id=\".concat(order.id, \"&status=\").concat(status)));\n\n          case 3:\n            rep = _context.sent;\n            if (rep.data.status == event.target.value) setStatus(event.target.value);else enqueueSnackbar('Successfully fetched the data.');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(TableCell, {\n    style: {\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(StatusSelector, {\n    status: status,\n    handleChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MethodCell = function MethodCell(props) {\n  return __jsx(TableCell, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    title: props.children,\n    TransitionComponent: Fade,\n    TransitionProps: {\n      timeout: 600\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, props.children == \"Retrait en point de vente\" ? __jsx(HouseOutlinedIcon, {\n    fontSize: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }) : __jsx(LocalShippingIcon, {\n    fontSize: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default withSnackbar(OrderItem);","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx"],"names":["React","useState","TableCell","TableRow","StatusSelector","axios","LocalShippingIcon","HouseOutlinedIcon","Tooltip","Fade","withSnackbar","OrderItem","order","enqueueSnackbar","id","billing","first_name","last_name","total","shipping_lines","method_title","IdCell","props","children","NameCell","PriceCell","StatusCell","status","setStatus","handleChange","event","target","value","put","rep","data","borderRadius","MethodCell","timeout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,YAAT,QAAgD,WAAhD;;AAMA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAA8B;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,eAAqB,QAArBA,eAAqB;AACtE,SACQD,KAAK,IACL,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAK,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,KAAK,CAACE,EAAf,CADA,EAEA,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWF,KAAK,CAACG,OAAN,CAAcC,UAAzB,OAAsCJ,KAAK,CAACG,OAAN,CAAcE,SAApD,MAFA,EAGA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYL,KAAK,CAACM,KAAlB,WAHA,EAIA,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEN,KAAnB;AAA0B,IAAA,eAAe,EAAEC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKCD,KAAK,CAACO,cAAN,CAAqB,CAArB,KACD,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaP,KAAK,CAACO,cAAN,CAAqB,CAArB,EAAwBC,YAArC,CANA,CAFR;AAYH,CAbD;;AAeA,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,CAACC,KAAD,EAAW;AAChC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACC,QAAlB,CADJ;AAGH,CAJD;;AAMA,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,CAACF,KAAD,EAAW;AAClC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACC,QAAlB,CADJ;AAGH,CAJD;;AAMA,IAAME,SAAmB,GAAG,SAAtBA,SAAsB,CAACH,KAAD,EAAW;AACnC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACC,QAAlB,CADJ;AAGH,CAJD;;AAMA,IAAMG,UAAoC,GAAG,SAAvCA,UAAuC,QAA8B;AAAA,MAA5Bd,KAA4B,SAA5BA,KAA4B;AAAA,MAArBC,eAAqB,SAArBA,eAAqB;;AAAA,kBAC3CZ,QAAQ,CAACW,KAAK,CAACe,MAAP,CADmC;AAAA,MAChEA,MADgE;AAAA,MACxDC,SADwD;;AAGvE,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXH,YAAAA,MADW,GACFG,KAAK,CAACC,MAAN,CAAaC,KADX;AAAA;AAAA,6CAEC3B,KAAK,CAAC4B,GAAN,oDAAsDrB,KAAK,CAACE,EAA5D,qBAAyEa,MAAzE,EAFD;;AAAA;AAEXO,YAAAA,GAFW;AAGjB,gBAAIA,GAAG,CAACC,IAAJ,CAASR,MAAT,IAAmBG,KAAK,CAACC,MAAN,CAAaC,KAApC,EACIJ,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,CADJ,KAGInB,eAAe,CAAC,gCAAD,CAAf;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AASA,SACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEuB,MAAAA,YAAY,EAAC;AAAf,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAET,MAAxB;AAAgC,IAAA,YAAY,EAAEE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAjBD;;AAmBA,IAAMQ,UAAoB,GAAG,SAAvBA,UAAuB,CAACf,KAAD,EAAW;AACpC,SACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,QADjB;AAEI,IAAA,mBAAmB,EAAEd,IAFzB;AAGI,IAAA,eAAe,EAAE;AAAE6B,MAAAA,OAAO,EAAE;AAAX,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKChB,KAAK,CAACC,QAAN,IAAkB,2BAAlB,GACO,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,GAGG,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CADJ;AAeH,CAhBD;;AAkBA,eAAeb,YAAY,CAACC,SAAD,CAA3B","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { useStylesStatusSelector, colors } from './Orders.style';\nimport axios from 'axios';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport { withSnackbar, WithSnackbarProps } from 'notistack';\n\ninterface OrderItemProps extends WithSnackbarProps {\n    order: any,\n}\n\nconst OrderItem: React.FC<OrderItemProps> = ({order, enqueueSnackbar}) => {\n    return (\n            order && (\n            <TableRow key={order.id}>\n            <IdCell>{order.id}</IdCell>\n            <NameCell>{order.billing.first_name} {order.billing.last_name} </NameCell>\n            <PriceCell>{order.total}â‚¬</PriceCell>\n            <StatusCell order={order} enqueueSnackbar={enqueueSnackbar} />\n            {order.shipping_lines[0] && \n            <MethodCell>{order.shipping_lines[0].method_title}</MethodCell>}\n            </TableRow>\n            )\n    );\n}\n\nconst IdCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst NameCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst StatusCell: React.FC<OrderItemProps> = ({order, enqueueSnackbar}) => {\n    const [status, setStatus] = useState(order.status);\n\n    const handleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const status = event.target.value;\n        const rep = await axios.put(`http://localhost:3000/api/updateOrder?id=${order.id}&status=${status}`);\n        if (rep.data.status == event.target.value)\n            setStatus(event.target.value as string);\n        else\n            enqueueSnackbar('Successfully fetched the data.');\n      };\n \n    return (\n        <TableCell style={{ borderRadius:10 }}>\n            <StatusSelector status={status} handleChange={handleChange}/>\n        </TableCell>\n    );\n}\n\nconst MethodCell: React.FC = (props) => {\n    return (\n        <TableCell align=\"center\">\n            <Tooltip \n                title={props.children}\n                TransitionComponent={Fade} \n                TransitionProps={{ timeout: 600 }}\n            >\n            {props.children == \"Retrait en point de vente\" ? (\n                    <HouseOutlinedIcon fontSize='large'/>\n            ) : (\n                <LocalShippingIcon fontSize='large'/>\n            )}\n            </Tooltip>\n        </TableCell>\n    );\n}\n\nexport default withSnackbar(OrderItem);"]},"metadata":{},"sourceType":"module"}