{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderTable.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\nimport { TableSortLabel } from '@material-ui/core';\n\nvar OrderHead = function OrderHead(_ref) {\n  var orderBy = _ref.orderBy,\n      orderDir = _ref.orderDir;\n  var heads = [\"N°\", \"Nom\", \"Total\", \"Status\", \"Date de commande\", \"Expédition\"];\n\n  var createSortHandler = function createSortHandler(id) {\n    return null;\n  };\n\n  return __jsx(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, heads.map(function (name, id) {\n    return __jsx(TableCell, {\n      key: id,\n      align: name == \"Expédition\" ? \"center\" : \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, __jsx(TableSortLabel, {\n      active: orderBy === id,\n      direction: orderBy === id ? orderDir : 'asc',\n      onClick: createSortHandler(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, name));\n  })));\n};\n\nvar sortById = function sortById(elmt1, elmt2) {\n  return elmt1.id >= elmt2.id ? -1 : 1;\n};\n\nvar OrderTable = function OrderTable(props) {\n  var orders = props.orders;\n\n  var _useState = useState(),\n      orderBy = _useState[0],\n      setOrderBy = _useState[1];\n\n  var _useState2 = useState('asc'),\n      orderDir = _useState2[0],\n      setOrderDir = _useState2[1];\n\n  var sorters = [sortById];\n\n  var getSortHandler = function getSortHandler(orderBy, orderDir) {\n    return function (elmt1, elmt2) {\n      var ret = sorters[orderBy](elmt1, elmt2); //elmt1.id <= elmt2.id ? -1 : 1;\n\n      return orderDir == 'asc' ? ret : -ret;\n    };\n  };\n\n  return __jsx(\"div\", _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(OrderHead, {\n    orderBy: orderBy,\n    orderDir: orderDir,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, orders.sort(getSortHandler(0, orderDir)).map(function (order) {\n    return __jsx(OrderItem, {\n      key: order.id,\n      order: order,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    });\n  }))));\n};\n\nexport default OrderTable;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderTable.tsx"],"names":["React","useState","Table","TableBody","TableCell","TableHead","TableRow","OrderItem","TableSortLabel","OrderHead","orderBy","orderDir","heads","createSortHandler","id","map","name","sortById","elmt1","elmt2","OrderTable","props","orders","setOrderBy","setOrderDir","sorters","getSortHandler","ret","sort","order"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAWA,IAAMC,SAA8B,GAAG,SAAjCA,SAAiC,OAAyB;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC5D,MAAMC,KAAc,GAAE,CAAC,IAAD,EAAO,KAAP,EAAc,OAAd,EAAuB,QAAvB,EAAiC,kBAAjC,EAAqD,YAArD,CAAtB;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,EAAD;AAAA,WAAQ,IAAR;AAAA,GAA1B;;AACA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAcF,EAAd;AAAA,WACX,MAAC,SAAD;AACI,MAAA,GAAG,EAAEA,EADT;AAEI,MAAA,KAAK,EAAIE,IAAI,IAAE,YAAN,GAAqB,QAArB,GAAgC,MAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,cAAD;AACI,MAAA,MAAM,EAAEN,OAAO,KAAKI,EADxB;AAEI,MAAA,SAAS,EAAEJ,OAAO,KAAKI,EAAZ,GAAiBH,QAAjB,GAA4B,KAF3C;AAGI,MAAA,OAAO,EAAEE,iBAAiB,CAACC,EAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKCE,IALD,CAJJ,CADW;AAAA,GAAV,CADL,CADJ,CADJ;AAoBH,CAvBD;;AAyBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,KAAR;AAAA,SAAkBD,KAAK,CAACJ,EAAN,IAAYK,KAAK,CAACL,EAAlB,GAAuB,CAAC,CAAxB,GAA4B,CAA9C;AAAA,CAAjB;;AAEA,IAAMM,UAAgC,GAAG,SAAnCA,UAAmC,CAACC,KAAD,EAAW;AAAA,MACxCC,MADwC,GAC7BD,KAD6B,CACxCC,MADwC;;AAAA,kBAElBrB,QAAQ,EAFU;AAAA,MAEzCS,OAFyC;AAAA,MAEhCa,UAFgC;;AAAA,mBAGhBtB,QAAQ,CAAiB,KAAjB,CAHQ;AAAA,MAGzCU,QAHyC;AAAA,MAG/Ba,WAH+B;;AAIhD,MAAMC,OAAO,GAAG,CAACR,QAAD,CAAhB;;AACA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAAChB,OAAD,EAAUC,QAAV,EAAuB;AAAE,WAC5C,UAACO,KAAD,EAAaC,KAAb,EAA6B;AAEzB,UAAMQ,GAAG,GAAGF,OAAO,CAACf,OAAD,CAAP,CAAiBQ,KAAjB,EAAuBC,KAAvB,CAAZ,CAFyB,CAEkB;;AAC3C,aAAQR,QAAQ,IAAI,KAAZ,GAAoBgB,GAApB,GAA0B,CAACA,GAAnC;AACH,KAL2C;AAM9C,GANF;;AAOA,SACI,0BAASN,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACA,MAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEX,OAApB;AAA6B,IAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKW,MAAM,CAACM,IAAP,CAAYF,cAAc,CAAC,CAAD,EAAIf,QAAJ,CAA1B,EAAyCI,GAAzC,CAA6C,UAACc,KAAD,EAAW;AACrD,WACA,MAAC,SAAD;AACI,MAAA,GAAG,EAAIA,KAAK,CAACf,EADjB;AAEI,MAAA,KAAK,EAAEe,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAII,GALP,CADL,CAFJ,CADA,CADJ;AAeF,CA3BF;;AA6BA,eAAeT,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\nimport { TableSortLabel } from '@material-ui/core';\n\ninterface TableProps {\n    orders:any\n}\n\ninterface HeadProps {\n    orderBy: number\n    orderDir: \"desc\" | \"asc\"\n}\n\nconst OrderHead: React.FC<HeadProps> = ({orderBy, orderDir}) => {\n    const heads:string[]= [\"N°\", \"Nom\", \"Total\", \"Status\", \"Date de commande\", \"Expédition\"];\n    const createSortHandler = (id) => null;\n    return (\n        <TableHead>\n            <TableRow>\n                {heads.map((name:string, id: number) => (\n                <TableCell \n                    key={id}\n                    align = {name==\"Expédition\" ? \"center\" : \"left\"}\n                >\n                    <TableSortLabel\n                        active={orderBy === id}\n                        direction={orderBy === id ? orderDir : 'asc'}\n                        onClick={createSortHandler(id)}\n                    >\n                    {name}\n                    </TableSortLabel>\n                </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst sortById = (elmt1, elmt2) => elmt1.id >= elmt2.id ? -1 : 1;\n\nconst OrderTable: React.FC<TableProps> = (props) => {\n    const { orders } = props;\n    const [orderBy, setOrderBy] = useState();\n    const [orderDir, setOrderDir] = useState<\"desc\" | \"asc\">('asc');\n    const sorters = [sortById]\n    const getSortHandler = (orderBy, orderDir) => { return (\n        (elmt1: any, elmt2: any) =>  {\n\n            const ret = sorters[orderBy](elmt1,elmt2); //elmt1.id <= elmt2.id ? -1 : 1;\n            return (orderDir == 'asc' ? ret : -ret);\n        }\n    )}\n    return (\n        <div {...props}>\n        <Table stickyHeader size=\"small\">\n            <OrderHead orderBy={orderBy} orderDir={orderDir}/>\n            <TableBody>\n                {orders.sort(getSortHandler(0, orderDir)).map((order) => {\n                    return (\n                    <OrderItem \n                        key = {order.id}\n                        order={order}\n                    />)}\n                )}\n            </TableBody>\n        </Table>\n        </div>\n)}\n   \nexport default OrderTable;"]},"metadata":{},"sourceType":"module"}