{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { useDeviceType } from '../helper/useDeviceType';\nimport { GlobalProvider } from '../context/global/global.provider';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport 'typeface-roboto';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from '../../firebase.config';\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\n\nfunction ExtendedApp({\n  Component,\n  pageProps,\n  query,\n  userAgent\n}) {\n  const deviceType = useDeviceType(userAgent);\n  return __jsx(GlobalProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), __jsx(SnackbarProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })))));\n}\n\nExtendedApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  const {\n    req,\n    query\n  } = appContext.ctx;\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  return _objectSpread({}, appProps, {\n    userAgent,\n    query\n  });\n};\n\nexport default ExtendedApp;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/_app.tsx"],"names":["React","App","useDeviceType","GlobalProvider","ThemeProvider","SnackbarProvider","CssBaseline","theme","firebase","firebaseConfig","firebaseApp","initializeApp","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","ExtendedApp","Component","pageProps","query","userAgent","deviceType","getInitialProps","appContext","appProps","req","ctx","headers","navigator"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,iBAAP;AAEA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,aAAT,CAAuBF,cAAvB,CAApB;AACA,MAAMG,eAAe,GAAGF,WAAW,CAACG,IAAZ,EAAxB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,cAAc,EAAE,IAAIP,QAAQ,CAACK,IAAT,CAAcG,kBAAlB;AADA,CAAlB;;AAIA,SAASC,WAAT,CAAqB;AACjBC,EAAAA,SADiB;AAEjBC,EAAAA,SAFiB;AAGjBC,EAAAA,KAHiB;AAIjBC,EAAAA;AAJiB,CAArB,EAKK;AACD,QAAMC,UAAU,GAAGpB,aAAa,CAACmB,SAAD,CAAhC;AACA,SAEE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEd,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeY,SAAf;AAA0B,IAAA,UAAU,EAAEG,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF,CAFF;AAWD;;AAEDL,WAAW,CAACM,eAAZ,GAA8B,MAAMC,UAAN,IAAoB;AAChD,QAAMC,QAAQ,GAAG,MAAMxB,GAAG,CAACsB,eAAJ,CAAoBC,UAApB,CAAvB;AACA,QAAM;AAAEE,IAAAA,GAAF;AAAON,IAAAA;AAAP,MAAiBI,UAAU,CAACG,GAAlC;AACA,QAAMN,SAAS,GAAGK,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAH,GAA+BC,SAAS,CAACR,SAA9D;AACA,2BAAYI,QAAZ;AAAsBJ,IAAAA,SAAtB;AAAiCD,IAAAA;AAAjC;AACD,CALD;;AAOA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { useDeviceType } from '../helper/useDeviceType';\nimport { GlobalProvider } from '../context/global/global.provider';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport 'typeface-roboto';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from '../../firebase.config';\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nfunction ExtendedApp({\n    Component,\n    pageProps,\n    query,\n    userAgent,\n  }) {\n    const deviceType = useDeviceType(userAgent);\n    return (\n   \n      <GlobalProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <SnackbarProvider> \n            <Component {...pageProps} deviceType={deviceType} />\n          </SnackbarProvider>\n        </ThemeProvider>\n      </GlobalProvider>\n    );\n  }\n  \n  ExtendedApp.getInitialProps = async appContext => {\n    const appProps = await App.getInitialProps(appContext);\n    const { req, query } = appContext.ctx;\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n    return { ...appProps, userAgent, query };\n  };\n\n  export default ExtendedApp;"]},"metadata":{},"sourceType":"module"}