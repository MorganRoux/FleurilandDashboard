{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { blue, defaultColor } from './Orders.style';\n\nvar OrderItem = function OrderItem(props) {\n  return __jsx(TableRow, {\n    key: props.order.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(IdCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.order.id), __jsx(NameCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, props.order.billing.first_name, \" \", props.order.billing.last_name, \" \"), __jsx(PriceCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.order.total, \"\\u20AC\"), __jsx(StatusCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, props.order.status), __jsx(MethodCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, props.order.shipping_lines[0].method_title));\n};\n\nvar IdCell = function IdCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar NameCell = function NameCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar PriceCell = function PriceCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar StatusCell = function StatusCell(props) {\n  var text = \"\";\n\n  var _useState = useState(props.children.toString()),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(blue),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setStatus(event.target.value);\n    setColor(defaultColor);\n  };\n  /*\n      if (props.children.toString() == \"processing\"){\n          color = \"Coral\";\n          text = \"En cours\";\n      }\n      else if (props.children.toString() == \"completed\"){\n          color = \"LightGreen\";\n          text = \"Terminée\";\n      }\n      else if (props.children.toString() == \"cancelled\"){\n          color = \"WhiteSmoke\";\n          text = \"Annulée\";\n      }\n      else if (props.children.toString() == \"refunded\"){\n          color = \"#bad095\";\n          text = \"Remboursée\";\n      }\n      else {\n          color = \"White\";\n          text = props.children.toString();\n      }\n      */\n\n\n  return (// <TableCell style={{backgroundColor:`${color}`,  borderRadius:10}}>\n    __jsx(TableCell, {\n      style: {\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, __jsx(StatusSelector, {\n      status: status,\n      handleChange: handleChange,\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }))\n  );\n};\n\nvar MethodCell = function MethodCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default OrderItem;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx"],"names":["React","useState","TableCell","TableRow","StatusSelector","blue","defaultColor","OrderItem","props","order","id","billing","first_name","last_name","total","status","shipping_lines","method_title","IdCell","children","NameCell","PriceCell","StatusCell","text","toString","setStatus","color","setColor","handleChange","event","target","value","borderRadius","MethodCell"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAkCC,IAAlC,EAAwCC,YAAxC,QAA4D,gBAA5D;;AAMA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AACnD,SACI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAK,CAACC,KAAN,CAAYC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,KAAK,CAACC,KAAN,CAAYC,EAArB,CADJ,EAEI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWF,KAAK,CAACC,KAAN,CAAYE,OAAZ,CAAoBC,UAA/B,OAA4CJ,KAAK,CAACC,KAAN,CAAYE,OAAZ,CAAoBE,SAAhE,MAFJ,EAGI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYL,KAAK,CAACC,KAAN,CAAYK,KAAxB,WAHJ,EAII,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaN,KAAK,CAACC,KAAN,CAAYM,MAAzB,CAJJ,EAKI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaP,KAAK,CAACC,KAAN,CAAYO,cAAZ,CAA2B,CAA3B,EAA8BC,YAA3C,CALJ,CADJ;AASH,CAVD;;AAYA,IAAMC,MAAgB,GAAG,SAAnBA,MAAmB,CAACV,KAAD,EAAW;AAChC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACW,QAAlB,CADJ;AAGH,CAJD;;AAMA,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,CAACZ,KAAD,EAAW;AAClC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACW,QAAlB,CADJ;AAGH,CAJD;;AAMA,IAAME,SAAmB,GAAG,SAAtBA,SAAsB,CAACb,KAAD,EAAW;AACnC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACW,QAAlB,CADJ;AAGH,CAJD;;AAMA,IAAMG,UAAoB,GAAG,SAAvBA,UAAuB,CAACd,KAAD,EAAW;AACpC,MAAIe,IAAI,GAAG,EAAX;;AADoC,kBAERtB,QAAQ,CAACO,KAAK,CAACW,QAAN,CAAeK,QAAf,EAAD,CAFA;AAAA,MAE7BT,MAF6B;AAAA,MAErBU,SAFqB;;AAAA,mBAGVxB,QAAQ,CAACI,IAAD,CAHE;AAAA,MAG7BqB,KAH6B;AAAA,MAGtBC,QAHsB;;AAKpC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAkD;AACnEJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACAJ,IAAAA,QAAQ,CAACrB,YAAD,CAAR;AACD,GAHH;AAKJ;;;;;;;;;;;;;;;;;;;;;;;;AAsBI,SACI;AACA,UAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAC0B,QAAAA,YAAY,EAAC;AAAd,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEjB,MAAxB;AAAgC,MAAA,YAAY,EAAEa,YAA9C;AAA4D,MAAA,KAAK,EAAEF,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAFJ;AAMH,CAtCD;;AAwCA,IAAMO,UAAoB,GAAG,SAAvBA,UAAuB,CAACzB,KAAD,EAAW;AACpC,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAK,CAACW,QAAlB,CADJ;AAGH,CAJD;;AAMA,eAAeZ,SAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { useStylesStatusSelector, blue, defaultColor } from './Orders.style';\n\ntype OrderItemProps = {\n    order: any\n}\n\nconst OrderItem: React.FC<OrderItemProps> = (props) => {\n    return (\n        <TableRow key={props.order.id}>\n            <IdCell>{props.order.id}</IdCell>\n            <NameCell>{props.order.billing.first_name} {props.order.billing.last_name} </NameCell>\n            <PriceCell>{props.order.total}€</PriceCell>\n            <StatusCell>{props.order.status}</StatusCell>\n            <MethodCell>{props.order.shipping_lines[0].method_title}</MethodCell>\n        </TableRow>\n    );\n}\n\nconst IdCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst NameCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst StatusCell: React.FC = (props) => {\n    let text = \"\"\n    const [status, setStatus] = useState(props.children.toString());\n    const [color, setColor] = useState(blue);\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setStatus(event.target.value as string);\n        setColor(defaultColor)\n      };\n  \n/*\n    if (props.children.toString() == \"processing\"){\n        color = \"Coral\";\n        text = \"En cours\";\n    }\n    else if (props.children.toString() == \"completed\"){\n        color = \"LightGreen\";\n        text = \"Terminée\";\n    }\n    else if (props.children.toString() == \"cancelled\"){\n        color = \"WhiteSmoke\";\n        text = \"Annulée\";\n    }\n    else if (props.children.toString() == \"refunded\"){\n        color = \"#bad095\";\n        text = \"Remboursée\";\n    }\n    else {\n        color = \"White\";\n        text = props.children.toString();\n    }\n    */\n    return (\n        // <TableCell style={{backgroundColor:`${color}`,  borderRadius:10}}>\n        <TableCell style={{borderRadius:10}}>\n            <StatusSelector status={status} handleChange={handleChange} color={color}/>\n        </TableCell>\n    );\n}\n\nconst MethodCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nexport default OrderItem;"]},"metadata":{},"sourceType":"module"}