{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { firebase, googleAuthProvider } from '../helper/firebase';\nimport { Button } from '@material-ui/core';\nimport { AuthContext, AuthProvider } from '../context/auth/auth.context';\n\nconst LoginPage = () => {\n  const hanldeClick = () => {\n    firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n\n  return __jsx(Button, {\n    onClick: hanldeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"Click\");\n};\n\nconst Index = () => {\n  const authContext = useContext(AuthContext);\n  console.log(authContext);\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      // User is signed in.\n      var displayName = user.displayName;\n      var email = user.email;\n      var emailVerified = user.emailVerified;\n      var photoURL = user.photoURL;\n      var isAnonymous = user.isAnonymous;\n      var uid = user.uid;\n      var providerData = user.providerData; //setAuth(true);\n    } else {// setAuth(false);\n      }\n  });\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Fleuriland\"), \"test\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/index.tsx"],"names":["React","useContext","firebase","googleAuthProvider","Button","AuthContext","AuthProvider","LoginPage","hanldeClick","auth","signInWithPopup","Index","authContext","console","log","onAuthStateChanged","user","displayName","email","emailVerified","photoURL","isAnonymous","uid","providerData"],"mappings":";;AAAA,OAAOA,KAAP,IAAqCC,UAArC,QAAuD,OAAvD;AAEA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,oBAA7C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,8BAA1C;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAEhC,QAAMC,WAAW,GAAI,MAAM;AACzBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,eAAhB,CAAgCP,kBAAhC;AACD,GAFD;;AAGA,SACE,MAAC,MAAD;AACA,IAAA,OAAO,EAAEK,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,CAVD;;AAYA,MAAMG,KAAe,GAAG,MAAM;AAC5B,QAAMC,WAAW,GAAGX,UAAU,CAACI,WAAD,CAA9B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAV,EAAAA,QAAQ,CAACO,IAAT,GAAgBM,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAChD,QAAIA,IAAJ,EAAU;AACR;AACA,UAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,UAAIC,aAAa,GAAGH,IAAI,CAACG,aAAzB;AACA,UAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAApB;AACA,UAAIC,WAAW,GAAGL,IAAI,CAACK,WAAvB;AACA,UAAIC,GAAG,GAAGN,IAAI,CAACM,GAAf;AACA,UAAIC,YAAY,GAAGP,IAAI,CAACO,YAAxB,CARQ,CASR;AACD,KAVD,MAUO,CACN;AACA;AACF,GAdD;AAeE,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,SADF,CADF;AASD,CA3BH;;AA6BE,eAAeZ,KAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Home from '../components/Home/Home';\nimport { firebase, googleAuthProvider } from '../helper/firebase';\nimport { Button } from '@material-ui/core';\nimport { AuthContext, AuthProvider } from '../context/auth/auth.context';\n\nconst LoginPage: React.FC = () => {\n\n  const hanldeClick =  () => {\n    firebase.auth().signInWithPopup(googleAuthProvider);\n  }\n  return (\n    <Button\n    onClick={hanldeClick}\n    >Click</Button>\n  )\n}\n\nconst Index: React.FC = () => {\n  const authContext = useContext(AuthContext);\n  console.log(authContext);\n  firebase.auth().onAuthStateChanged(function(user) {\n    if (user) {\n      // User is signed in.\n      var displayName = user.displayName;\n      var email = user.email;\n      var emailVerified = user.emailVerified;\n      var photoURL = user.photoURL;\n      var isAnonymous = user.isAnonymous;\n      var uid = user.uid;\n      var providerData = user.providerData;\n      //setAuth(true);\n    } else {\n     // setAuth(false);\n    }\n  });\n    return (\n      <React.Fragment>\n        <AuthProvider>\n        <title>Fleuriland</title>\n        {/* { auth ? <Home /> : <LoginPage />} */}\n        test\n        </AuthProvider>\n      </React.Fragment>\n    );\n  }\n\n  export default Index;"]},"metadata":{},"sourceType":"module"}