{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport axios from 'axios';\n\nvar OrderItem = function OrderItem(props) {\n  return props.order && __jsx(TableRow, {\n    key: props.order.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(IdCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.order.id), __jsx(NameCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, props.order.billing.first_name, \" \", props.order.billing.last_name, \" \"), __jsx(PriceCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, props.order.total, \"\\u20AC\"), __jsx(StatusCell, _extends({}, props.order, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), props.order.shipping_lines[0] && __jsx(MethodCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, props.order.shipping_lines[0].method_title));\n};\n\nvar IdCell = function IdCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar NameCell = function NameCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar PriceCell = function PriceCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nvar StatusCell = function StatusCell(props) {\n  console.log(props);\n\n  var _useState = useState(props.order.status),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    var id, status, rep;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = \"12156\";\n            status = event.target.value;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3000/api/updateOrder?id=\".concat(id, \"&status=\").concat(status)));\n\n          case 4:\n            rep = _context.sent;\n            if (rep.data.status == event.target.value) setStatus(event.target.value);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(TableCell, {\n    style: {\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(StatusSelector, {\n    status: status,\n    handleChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MethodCell = function MethodCell(props) {\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default OrderItem;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx"],"names":["React","useState","TableCell","TableRow","StatusSelector","axios","OrderItem","props","order","id","billing","first_name","last_name","total","shipping_lines","method_title","IdCell","children","NameCell","PriceCell","StatusCell","console","log","status","setStatus","handleChange","event","target","value","put","rep","data","borderRadius","MethodCell"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport { useStylesStatusSelector, colors } from './Orders.style';\nimport axios from 'axios';\n\ntype OrderItemProps = {\n    order: any\n}\n\nconst OrderItem: React.FC<OrderItemProps> = (props) => {\n    return (\n            props.order && (\n            <TableRow key={props.order.id}>\n            <IdCell>{props.order.id}</IdCell>\n            <NameCell>{props.order.billing.first_name} {props.order.billing.last_name} </NameCell>\n            <PriceCell>{props.order.total}â‚¬</PriceCell>\n\n            <StatusCell {...props.order} />\n            {props.order.shipping_lines[0] && \n            <MethodCell>{props.order.shipping_lines[0].method_title}</MethodCell>}\n            </TableRow>\n            )\n    );\n}\n\nconst IdCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst NameCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nconst StatusCell: React.FC<OrderItemProps> = (props) => {\n    console.log(props);\n    const [status, setStatus] = useState(props.order.status);\n\n    const handleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const id = \"12156\";\n        const status = event.target.value;\n        const rep = await axios.put(`http://localhost:3000/api/updateOrder?id=${id}&status=${status}`);\n        if (rep.data.status == event.target.value)\n            setStatus(event.target.value as string);\n      };\n \n    return (\n        <TableCell style={{ borderRadius:10 }}>\n            <StatusSelector status={status} handleChange={handleChange}/>\n        </TableCell>\n    );\n}\n\nconst MethodCell: React.FC = (props) => {\n    return (\n        <TableCell>{props.children}</TableCell>\n    );\n}\n\nexport default OrderItem;"]},"metadata":{},"sourceType":"module"}