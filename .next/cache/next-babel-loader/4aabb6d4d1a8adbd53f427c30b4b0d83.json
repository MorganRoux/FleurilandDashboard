{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Home from '../components/Home/Home';\nimport { firebase } from '../helper/firebase';\nimport { Button } from '@material-ui/core';\nimport { AuthContext } from '../context/auth/auth.context';\nconst {\n  authState,\n  authDispatch\n} = useContext(AuthContext);\n\nconst LoginPage = () => {\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n\n  const hanldeClick = () => {\n    authDispatch({\n      type: 'LOGIN'\n    }); //firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n\n  return __jsx(Button, {\n    onClick: hanldeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"Click\");\n};\n\nconst Index = () => {\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n  const auth = authState.auth;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Fleuriland\"), auth ? __jsx(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }\n  }) : __jsx(LoginPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }));\n};\n\nfirebase.auth().onAuthStateChanged(user => {\n  console.log('hey');\n\n  if (user) {\n    // User is signed in.\n    var displayName = user.displayName;\n    var email = user.email;\n    var emailVerified = user.emailVerified;\n    var photoURL = user.photoURL;\n    var isAnonymous = user.isAnonymous;\n    var uid = user.uid;\n    var providerData = user.providerData;\n    authDispatch({\n      type: 'LOGIN'\n    });\n  } else {\n    authDispatch({\n      type: 'LOGOUT'\n    });\n  }\n});\nexport default Index;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/index.tsx"],"names":["React","useContext","Home","firebase","Button","AuthContext","authState","authDispatch","LoginPage","hanldeClick","type","Index","auth","onAuthStateChanged","user","console","log","displayName","email","emailVerified","photoURL","isAnonymous","uid","providerData"],"mappings":";;AAAA,OAAOA,KAAP,IAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,QAAT,QAA6C,oBAA7C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA0C,8BAA1C;AACA,MAAM;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,IAA4BN,UAAU,CAACI,WAAD,CAA5C;;AACA,MAAMG,SAAmB,GAAG,MAAM;AAChC,QAAM;AAACF,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA4BN,UAAU,CAACI,WAAD,CAA5C;;AACA,QAAMI,WAAW,GAAI,MAAM;AAEzBF,IAAAA,YAAY,CAAC;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAZ,CAFyB,CAGzB;AACD,GAJD;;AAKA,SACE,MAAC,MAAD;AACA,IAAA,OAAO,EAAED,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,CAZD;;AAcA,MAAME,KAAe,GAAG,MAAM;AAC5B,QAAM;AAACL,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA4BN,UAAU,CAACI,WAAD,CAA5C;AACA,QAAMO,IAAI,GAAGN,SAAS,CAACM,IAAvB;AACE,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEIA,IAAI,GAAG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAc,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtB,CADF;AAMD,CATH;;AAWET,QAAQ,CAACS,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,MAAIF,IAAJ,EAAU;AACR;AACA,QAAIG,WAAW,GAAGH,IAAI,CAACG,WAAvB;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AACA,QAAIC,aAAa,GAAGL,IAAI,CAACK,aAAzB;AACA,QAAIC,QAAQ,GAAGN,IAAI,CAACM,QAApB;AACA,QAAIC,WAAW,GAAGP,IAAI,CAACO,WAAvB;AACA,QAAIC,GAAG,GAAGR,IAAI,CAACQ,GAAf;AACA,QAAIC,YAAY,GAAGT,IAAI,CAACS,YAAxB;AACAhB,IAAAA,YAAY,CAAC;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAZ;AACD,GAVD,MAUO;AACLH,IAAAA,YAAY,CAAC;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAZ;AACD;AACF,CAfD;AAgBA,eAAeC,KAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Home from '../components/Home/Home';\nimport { firebase, googleAuthProvider } from '../helper/firebase';\nimport { Button } from '@material-ui/core';\nimport { AuthContext, AuthProvider } from '../context/auth/auth.context';\nconst {authState, authDispatch} = useContext(AuthContext);\nconst LoginPage: React.FC = () => {\n  const {authState, authDispatch} = useContext(AuthContext);\n  const hanldeClick =  () => {\n    \n    authDispatch({type: 'LOGIN'});\n    //firebase.auth().signInWithPopup(googleAuthProvider);\n  }\n  return (\n    <Button\n    onClick={hanldeClick}\n    >Click</Button>\n  )\n}\n\nconst Index: React.FC = () => {\n  const {authState, authDispatch} = useContext(AuthContext);\n  const auth = authState.auth;\n    return (\n      <React.Fragment>\n        <title>Fleuriland</title>\n        { auth ? <Home /> : <LoginPage />}\n      </React.Fragment>\n    );\n  }\n\n  firebase.auth().onAuthStateChanged((user) => {\n    console.log('hey')\n    if (user) {\n      // User is signed in.\n      var displayName = user.displayName;\n      var email = user.email;\n      var emailVerified = user.emailVerified;\n      var photoURL = user.photoURL;\n      var isAnonymous = user.isAnonymous;\n      var uid = user.uid;\n      var providerData = user.providerData;\n      authDispatch({type: 'LOGIN'});\n    } else {\n      authDispatch({type: 'LOGOUT'});\n    }\n  });\n  export default Index;"]},"metadata":{},"sourceType":"module"}