{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport Home from '../components/Home/Home';\nimport { firebase, googleAuthProvider } from '../helper/firebase';\nimport { Button } from '@material-ui/core';\nimport { AuthContext } from '../context/auth/auth.context';\n\nvar _useContext = useContext(AuthContext),\n    authState = _useContext.authState,\n    authDispatch = _useContext.authDispatch;\n\nvar LoginPage = function LoginPage() {\n  var _useContext2 = useContext(AuthContext),\n      authState = _useContext2.authState,\n      authDispatch = _useContext2.authDispatch;\n\n  var hanldeClick = function hanldeClick() {\n    //authDispatch({type: 'LOGIN'});\n    firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n\n  return __jsx(Button, {\n    onClick: hanldeClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"Click\");\n};\n\nvar Index = function Index() {\n  var _useContext3 = useContext(AuthContext),\n      authState = _useContext3.authState,\n      authDispatch = _useContext3.authDispatch;\n\n  var auth = authState.auth; //const [auth, setAuth] = useState(false);\n\n  useEffect(function () {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        var displayName = user.displayName;\n        var email = user.email;\n        var emailVerified = user.emailVerified;\n        var photoURL = user.photoURL;\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        var providerData = user.providerData; //setAuth(true);\n\n        if (auth == false) authDispatch({\n          type: 'LOGIN'\n        });\n      } else {\n        //setAuth(false);\n        if (auth == true) authDispatch({\n          type: 'LOGOUT'\n        });\n      }\n    });\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Fleuriland\"), auth ? __jsx(Home, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }\n  }) : __jsx(LoginPage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/index.tsx"],"names":["React","useEffect","useContext","Home","firebase","googleAuthProvider","Button","AuthContext","authState","authDispatch","LoginPage","hanldeClick","auth","signInWithPopup","Index","onAuthStateChanged","user","displayName","email","emailVerified","photoURL","isAnonymous","uid","providerData","type"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,oBAA7C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA0C,8BAA1C;;kBAEkCL,UAAU,CAACK,WAAD,C;IAArCC,S,eAAAA,S;IAAWC,Y,eAAAA,Y;;AAElB,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAAA,qBACER,UAAU,CAACK,WAAD,CADZ;AAAA,MACzBC,SADyB,gBACzBA,SADyB;AAAA,MACdC,YADc,gBACdA,YADc;;AAEhC,MAAME,WAAW,GAAI,SAAfA,WAAe,GAAM;AAEzB;AACAP,IAAAA,QAAQ,CAACQ,IAAT,GAAgBC,eAAhB,CAAgCR,kBAAhC;AACD,GAJD;;AAKA,SACE,MAAC,MAAD;AACA,IAAA,OAAO,EAAEM,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,CAZD;;AAcA,IAAMG,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAAA,qBACMZ,UAAU,CAACK,WAAD,CADhB;AAAA,MACrBC,SADqB,gBACrBA,SADqB;AAAA,MACVC,YADU,gBACVA,YADU;;AAE5B,MAAMG,IAAI,GAAGJ,SAAS,CAACI,IAAvB,CAF4B,CAG5B;;AAEAX,EAAAA,SAAS,CAAE,YAAM;AAACG,IAAAA,QAAQ,CAACQ,IAAT,GAAgBG,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC7D,UAAIA,IAAJ,EAAU;AACR;AACA,YAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AACA,YAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,YAAIC,aAAa,GAAGH,IAAI,CAACG,aAAzB;AACA,YAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAApB;AACA,YAAIC,WAAW,GAAGL,IAAI,CAACK,WAAvB;AACA,YAAIC,GAAG,GAAGN,IAAI,CAACM,GAAf;AACA,YAAIC,YAAY,GAAGP,IAAI,CAACO,YAAxB,CARQ,CASR;;AACA,YAAIX,IAAI,IAAI,KAAZ,EACEH,YAAY,CAAC;AAACe,UAAAA,IAAI,EAAE;AAAP,SAAD,CAAZ;AAEH,OAbD,MAaO;AACL;AACA,YAAIZ,IAAI,IAAI,IAAZ,EACEH,YAAY,CAAC;AAACe,UAAAA,IAAI,EAAE;AAAP,SAAD,CAAZ;AACH;AACF,KAnBiB;AAmBf,GAnBM,EAmBJ,EAnBI,CAAT;AAoBE,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEIZ,IAAI,GAAG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAc,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtB,CADF;AAMD,CA/BH;;AAiCE,eAAeE,KAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Home from '../components/Home/Home';\nimport { firebase, googleAuthProvider } from '../helper/firebase';\nimport { Button } from '@material-ui/core';\nimport { AuthContext, AuthProvider } from '../context/auth/auth.context';\n\nconst {authState, authDispatch} = useContext(AuthContext);\n\nconst LoginPage: React.FC = () => {\n  const {authState, authDispatch} = useContext(AuthContext);\n  const hanldeClick =  () => {\n    \n    //authDispatch({type: 'LOGIN'});\n    firebase.auth().signInWithPopup(googleAuthProvider);\n  }\n  return (\n    <Button\n    onClick={hanldeClick}\n    >Click</Button>\n  )\n}\n\nconst Index: React.FC = () => {\n  const {authState, authDispatch} = useContext(AuthContext);\n  const auth = authState.auth;\n  //const [auth, setAuth] = useState(false);\n\n  useEffect( () => {firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      // User is signed in.\n      var displayName = user.displayName;\n      var email = user.email;\n      var emailVerified = user.emailVerified;\n      var photoURL = user.photoURL;\n      var isAnonymous = user.isAnonymous;\n      var uid = user.uid;\n      var providerData = user.providerData;\n      //setAuth(true);\n      if (auth == false) \n        authDispatch({type: 'LOGIN'});\n      \n    } else {\n      //setAuth(false);\n      if (auth == true)\n        authDispatch({type: 'LOGOUT'});\n    }\n  })}, []);\n    return (\n      <React.Fragment>\n        <title>Fleuriland</title>\n        { auth ? <Home /> : <LoginPage />}\n      </React.Fragment>\n    );\n  }\n\n  export default Index;"]},"metadata":{},"sourceType":"module"}