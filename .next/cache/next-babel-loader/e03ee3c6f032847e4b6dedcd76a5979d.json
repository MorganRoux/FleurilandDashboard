{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { useDeviceType } from '../helper/useDeviceType';\nimport { AuthProvider } from '../context/auth/auth.context';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport 'typeface-roboto';\nexport default function ExtendedApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      query = _ref.query,\n      userAgent = _ref.userAgent;\n  var deviceType = useDeviceType(userAgent);\n  return __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), __jsx(SnackbarProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    deviceType: deviceType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })))));\n}\n\nExtendedApp.getInitialProps = function _callee(appContext) {\n  var appProps, _appContext$ctx, req, query, userAgent;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(App.getInitialProps(appContext));\n\n        case 2:\n          appProps = _context.sent;\n          _appContext$ctx = appContext.ctx, req = _appContext$ctx.req, query = _appContext$ctx.query;\n          userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n          return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n            userAgent: userAgent,\n            query: query\n          }));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/pages/_app.tsx"],"names":["React","App","useDeviceType","AuthProvider","ThemeProvider","SnackbarProvider","CssBaseline","theme","ExtendedApp","Component","pageProps","query","userAgent","deviceType","getInitialProps","appContext","appProps","ctx","req","headers","navigator"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,iBAAP;AAEA,eAAe,SAASC,WAAT,OAKV;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,SACC,QADDA,SACC;AACD,MAAMC,UAAU,GAAGX,aAAa,CAACU,SAAD,CAAhC;AACA,SAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeG,SAAf;AAA0B,IAAA,UAAU,EAAEG,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF,CAFF;AAWD;;AAEDL,WAAW,CAACM,eAAZ,GAA8B,iBAAMC,UAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLd,GAAG,CAACa,eAAJ,CAAoBC,UAApB,CADK;;AAAA;AACtBC,UAAAA,QADsB;AAAA,4BAELD,UAAU,CAACE,GAFN,EAEpBC,GAFoB,mBAEpBA,GAFoB,EAEfP,KAFe,mBAEfA,KAFe;AAGtBC,UAAAA,SAHsB,GAGVM,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,YAAZ,CAAH,GAA+BC,SAAS,CAACR,SAHlC;AAAA,6DAIhBI,QAJgB;AAINJ,YAAAA,SAAS,EAATA,SAJM;AAIKD,YAAAA,KAAK,EAALA;AAJL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport { useDeviceType } from '../helper/useDeviceType';\nimport { AuthProvider } from '../context/auth/auth.context';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport 'typeface-roboto';\n\nexport default function ExtendedApp({\n    Component,\n    pageProps,\n    query,\n    userAgent,\n  }) {\n    const deviceType = useDeviceType(userAgent);\n    return (\n   \n      <AuthProvider>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <SnackbarProvider> \n            <Component {...pageProps} deviceType={deviceType} />\n          </SnackbarProvider>\n        </ThemeProvider>\n      </AuthProvider>\n    );\n  }\n  \n  ExtendedApp.getInitialProps = async appContext => {\n    const appProps = await App.getInitialProps(appContext);\n    const { req, query } = appContext.ctx;\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n    return { ...appProps, userAgent, query };\n  };"]},"metadata":{},"sourceType":"module"}