{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/StatusSelector.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useStylesStatusSelector, colors } from './Orders.style';\n\nconst StatusSelector = props => {\n  const classes = useStylesStatusSelector();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(props.status);\n\n  const handleChange = event => {\n    setStatus(event.target.value);\n  };\n\n  useEffect(() => setStatus(props.status), [props.status]);\n  return __jsx(Select, {\n    value: status,\n    onChange: handleChange,\n    variant: \"filled\",\n    classes: {\n      select: classes.filled\n    },\n    style: colors[\"cancelled\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"cancelled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Annul\\xE9e\"), __jsx(MenuItem, {\n    value: \"processing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"En Cours\"), __jsx(MenuItem, {\n    value: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Termin\\xE9e\"), __jsx(MenuItem, {\n    value: \"refunded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Rembours\\xE9e\"));\n};\n\nexport default StatusSelector;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/StatusSelector.tsx"],"names":["React","useEffect","useState","MenuItem","Select","useStylesStatusSelector","colors","StatusSelector","props","classes","status","setStatus","handleChange","event","target","value","select","filled"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AAGA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,uBAAT,EAAkCC,MAAlC,QAAgD,gBAAhD;;AAOA,MAAMC,cAA4C,GAAIC,KAAD,IAAW;AAC5D,QAAMC,OAAO,GAAGJ,uBAAuB,EAAvC;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAACM,KAAK,CAACE,MAAP,CAApC;;AACA,QAAME,YAAY,GAAIC,KAAD,IAAkD;AACnEF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH,GAFD;;AAGAd,EAAAA,SAAS,CAAC,MAAMU,SAAS,CAACH,KAAK,CAACE,MAAP,CAAhB,EAAgC,CAACF,KAAK,CAACE,MAAP,CAAhC,CAAT;AACA,SAEI,MAAC,MAAD;AACA,IAAA,KAAK,EAAEA,MADP;AAEA,IAAA,QAAQ,EAAEE,YAFV;AAGA,IAAA,OAAO,EAAC,QAHR;AAIA,IAAA,OAAO,EAAE;AAACI,MAAAA,MAAM,EAAEP,OAAO,CAACQ;AAAjB,KAJT;AAKA,IAAA,KAAK,EAAEX,MAAM,CAAC,WAAD,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA,EAQA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,EASA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATA,EAUA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVA,CAFJ;AAeH,CAtBD;;AAwBA,eAAeC,cAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useStylesStatusSelector, colors } from './Orders.style';\n\ntype StatusSelectorProps = {\n    status: string,\n    handleChange\n}\n\nconst StatusSelector:React.FC<StatusSelectorProps> = (props) => {\n    const classes = useStylesStatusSelector();\n    const [status, setStatus] = useState(props.status);\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setStatus(event.target.value as string);\n    }\n    useEffect(() => setStatus(props.status), [props.status])\n    return (\n       \n        <Select\n        value={status}\n        onChange={handleChange}\n        variant=\"filled\"\n        classes={{select: classes.filled}}\n        style={colors[\"cancelled\"]}\n        >\n        <MenuItem value=\"cancelled\">Annulée</MenuItem>\n        <MenuItem value=\"processing\">En Cours</MenuItem>\n        <MenuItem value=\"completed\">Terminée</MenuItem>\n        <MenuItem value=\"refunded\">Remboursée</MenuItem>\n        </Select>\n    );\n}\n\nexport default StatusSelector;\n"]},"metadata":{},"sourceType":"module"}