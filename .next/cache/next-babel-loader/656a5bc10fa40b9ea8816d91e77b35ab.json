{"ast":null,"code":"export const sortById = (elmt1, elmt2) => elmt1.id <= elmt2.id ? -1 : 1;\nexport const sortByName = (elmt1, elmt2) => {\n  const firstName1 = elmt1.billing.first_name.charAt(0).toUpperCase() + elmt1.billing.first_name.slice(1).toLowerCase();\n  const lastName1 = elmt1.billing.last_name.charAt(0).toUpperCase() + elmt1.billing.last_name.slice(1).toLowerCase();\n  const firstName2 = elmt2.billing.first_name.charAt(0).toUpperCase() + elmt2.billing.first_name.slice(1).toLowerCase();\n  const lastName2 = elmt2.billing.last_name.charAt(0).toUpperCase() + elmt2.billing.last_name.slice(1).toLowerCase();\n\n  if (lastName1 != lastName2) {\n    return lastName1 <= lastName2 ? -1 : 1;\n  } else return firstName1 <= firstName2 ? -1 : 1;\n};\nexport const sortByTotal = (elmt1, elmt2) => parseFloat(elmt1.total) <= parseFloat(elmt2.total) ? -1 : 1;\nexport const sortByStatus = (elmt1, elmt2) => elmt1.status <= elmt2.status ? -1 : 1;\nexport const sortByDate = (elmt1, elmt2) => elmt1.date_created <= elmt2.date_created ? -1 : 1;\nexport const sortByMethod = (elmt1, elmt2) => {\n  const method1 = elmt1.shipping_lines[0] ? elmt1.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n  const method2 = elmt2.shipping_lines[0] ? elmt2.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n  return method1 <= method2 ? -1 : 1;\n};","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/sorters.tsx"],"names":["sortById","elmt1","elmt2","id","sortByName","firstName1","billing","first_name","charAt","toUpperCase","slice","toLowerCase","lastName1","last_name","firstName2","lastName2","sortByTotal","parseFloat","total","sortByStatus","status","sortByDate","date_created","sortByMethod","method1","shipping_lines","method_title","method2"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,CAACE,EAAN,IAAYD,KAAK,CAACC,EAAlB,GAAuB,CAAC,CAAxB,GAA4B,CAA/D;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACH,KAAD,EAAQC,KAAR,KAAkB;AACxC,QAAMG,UAAU,GAAGJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC,MAAzB,CAAgC,CAAhC,EAAmCC,WAAnC,KAAmDR,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBG,KAAzB,CAA+B,CAA/B,EAAkCC,WAAlC,EAAtE;AACA,QAAMC,SAAS,GAAGX,KAAK,CAACK,OAAN,CAAcO,SAAd,CAAwBL,MAAxB,CAA+B,CAA/B,EAAkCC,WAAlC,KAAkDR,KAAK,CAACK,OAAN,CAAcO,SAAd,CAAwBH,KAAxB,CAA8B,CAA9B,EAAiCC,WAAjC,EAApE;AACA,QAAMG,UAAU,GAAGZ,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC,MAAzB,CAAgC,CAAhC,EAAmCC,WAAnC,KAAmDP,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBG,KAAzB,CAA+B,CAA/B,EAAkCC,WAAlC,EAAtE;AACA,QAAMI,SAAS,GAAGb,KAAK,CAACI,OAAN,CAAcO,SAAd,CAAwBL,MAAxB,CAA+B,CAA/B,EAAkCC,WAAlC,KAAkDP,KAAK,CAACI,OAAN,CAAcO,SAAd,CAAwBH,KAAxB,CAA8B,CAA9B,EAAiCC,WAAjC,EAApE;;AAEA,MAAIC,SAAS,IAAIG,SAAjB,EAA4B;AACxB,WAAQH,SAAS,IAAIG,SAAb,GAAyB,CAAC,CAA1B,GAA8B,CAAtC;AACH,GAFD,MAII,OAAQV,UAAU,IAAIS,UAAd,GAA2B,CAAC,CAA5B,GAAgC,CAAxC;AACP,CAXM;AAaP,OAAO,MAAME,WAAW,GAAG,CAACf,KAAD,EAAQC,KAAR,KAAkBe,UAAU,CAAChB,KAAK,CAACiB,KAAP,CAAV,IAA2BD,UAAU,CAACf,KAAK,CAACgB,KAAP,CAArC,GAAqD,CAAC,CAAtD,GAA0D,CAAhG;AAEP,OAAO,MAAMC,YAAY,GAAG,CAAClB,KAAD,EAAQC,KAAR,KAAkBD,KAAK,CAACmB,MAAN,IAAgBlB,KAAK,CAACkB,MAAtB,GAA+B,CAAC,CAAhC,GAAoC,CAA3E;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACpB,KAAD,EAAQC,KAAR,KAAkBD,KAAK,CAACqB,YAAN,IAAsBpB,KAAK,CAACoB,YAA5B,GAA2C,CAAC,CAA5C,GAAgD,CAArF;AAEP,OAAO,MAAMC,YAAY,GAAG,CAACtB,KAAD,EAAQC,KAAR,KAAkB;AAC1C,QAAMsB,OAAO,GAAGvB,KAAK,CAACwB,cAAN,CAAqB,CAArB,IAA0BxB,KAAK,CAACwB,cAAN,CAAqB,CAArB,EAAwBC,YAAlD,GAAiE,2BAAjF;AACA,QAAMC,OAAO,GAAGzB,KAAK,CAACuB,cAAN,CAAqB,CAArB,IAA0BvB,KAAK,CAACuB,cAAN,CAAqB,CAArB,EAAwBC,YAAlD,GAAiE,2BAAjF;AACA,SAAQF,OAAO,IAAIG,OAAX,GAAqB,CAAC,CAAtB,GAA0B,CAAlC;AACH,CAJM","sourcesContent":["export const sortById = (elmt1, elmt2) => elmt1.id <= elmt2.id ? -1 : 1;\n\nexport const sortByName = (elmt1, elmt2) => {\n    const firstName1 = elmt1.billing.first_name.charAt(0).toUpperCase() + elmt1.billing.first_name.slice(1).toLowerCase();\n    const lastName1 = elmt1.billing.last_name.charAt(0).toUpperCase() + elmt1.billing.last_name.slice(1).toLowerCase();\n    const firstName2 = elmt2.billing.first_name.charAt(0).toUpperCase() + elmt2.billing.first_name.slice(1).toLowerCase();\n    const lastName2 = elmt2.billing.last_name.charAt(0).toUpperCase() + elmt2.billing.last_name.slice(1).toLowerCase();\n    \n    if (lastName1 != lastName2) {\n        return (lastName1 <= lastName2 ? -1 : 1);\n    }\n    else \n        return (firstName1 <= firstName2 ? -1 : 1);\n}\n\nexport const sortByTotal = (elmt1, elmt2) => parseFloat(elmt1.total) <= parseFloat(elmt2.total) ? -1 : 1;\n\nexport const sortByStatus = (elmt1, elmt2) => elmt1.status <= elmt2.status ? -1 : 1;\n\nexport const sortByDate = (elmt1, elmt2) => elmt1.date_created <= elmt2.date_created ? -1 : 1;\n\nexport const sortByMethod = (elmt1, elmt2) => {\n    const method1 = elmt1.shipping_lines[0] ? elmt1.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n    const method2 = elmt2.shipping_lines[0] ? elmt2.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n    return (method1 <= method2 ? -1 : 1);\n}"]},"metadata":{},"sourceType":"module"}