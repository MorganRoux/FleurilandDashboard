{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/components/Home.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Products from './products/Products';\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  console.log(\"theme\", theme.zIndex.drawer);\n  return createStyles({\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      zIndex: 1300 //theme.zIndex.drawer + 1,\n\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerContainer: {//overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  });\n});\n\nvar Home = function Home() {\n  var classes = useStyles();\n  console.log(\"bar\", classes.appBar);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(CssBaseline, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Fleuriland\"))), __jsx(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: classes.drawerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 52\n      }\n    }) : __jsx(MailIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 68\n      }\n    })), __jsx(ListItemText, {\n      primary: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 52\n      }\n    }) : __jsx(MailIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 68\n      }\n    })), __jsx(ListItemText, {\n      primary: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }));\n  })))), __jsx(\"main\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), __jsx(Products, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/components/Home.tsx"],"names":["React","makeStyles","createStyles","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Products","drawerWidth","useStyles","theme","console","log","zIndex","drawer","root","display","appBar","menuButton","marginRight","spacing","title","flexGrow","width","flexShrink","drawerPaper","drawerContainer","content","padding","Home","classes","paper","map","text","index"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport Products from './products/Products';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  console.log(\"theme\", theme.zIndex.drawer);\n  return (\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: 1300//theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    \n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      //overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));\n});\n\n\nconst Home: React.FC = () => {\n    const classes = useStyles();\n    console.log(\"bar\", classes.appBar);\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap>\n              Fleuriland\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Toolbar />\n          <div className={classes.drawerContainer}>\n            <List>\n              {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Drawer>\n        <main className={classes.content}>\n          <Toolbar />\n          <Products/>\n        </main>\n      </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}