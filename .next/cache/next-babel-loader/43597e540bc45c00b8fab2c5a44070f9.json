{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport axios from 'axios';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport { withSnackbar } from 'notistack';\n\nvar OrderItem = function OrderItem(props) {\n  var order = props.order;\n  return order && __jsx(TableRow, {\n    key: order.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(IdCell, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })), __jsx(NameCell, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), __jsx(PriceCell, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })), __jsx(StatusCell, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })), __jsx(DateCell, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })), __jsx(MethodCell, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar IdCell = function IdCell(_ref) {\n  var order = _ref.order;\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, order.id);\n};\n\nvar NameCell = function NameCell(_ref2) {\n  var order = _ref2.order;\n  var firstName = order.billing.first_name.charAt(0).toUpperCase() + order.billing.first_name.slice(1).toLowerCase();\n  var lastName = order.billing.last_name.charAt(0).toUpperCase() + order.billing.last_name.slice(1).toLowerCase();\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, firstName, \" \", lastName);\n};\n\nvar PriceCell = function PriceCell(_ref3) {\n  var order = _ref3.order;\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, order.total, \"\\u20AC\");\n};\n\nvar StatusCell = function StatusCell(_ref4) {\n  var order = _ref4.order,\n      enqueueSnackbar = _ref4.enqueueSnackbar;\n\n  var _useState = useState(order.status),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    var status, rep;\n    return _regeneratorRuntime.async(function handleChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            status = event.target.value;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:3000/api/updateOrder?id=\".concat(order.id, \"&status=\").concat(status)));\n\n          case 3:\n            rep = _context.sent;\n            console.log(\"ok\");\n\n            if (rep.data.status == event.target.value) {\n              setStatus(event.target.value);\n              enqueueSnackbar('Mise à jour réussie', {\n                variant: 'success',\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'right'\n                }\n              });\n            } else enqueueSnackbar('Erreur de connexion au serveur', {\n              variant: 'error',\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(TableCell, {\n    style: {\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(StatusSelector, {\n    status: status,\n    handleChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar DateCell = function DateCell(_ref5) {\n  var order = _ref5.order;\n  var date = new Date(order.date_created);\n  var min = date.getMinutes().toString().padStart(2, \"0\");\n  var hh = date.getHours().toString().padStart(2, \"0\");\n  var dd = date.getDate().toString().padStart(2, \"0\");\n  var mm = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  var yyyy = date.getFullYear().toString().padStart(2, \"0\");\n  return __jsx(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"\".concat(dd, \"-\").concat(mm, \"-\").concat(yyyy, \" \").concat(hh, \":\").concat(min));\n};\n\nvar MethodCell = function MethodCell(_ref6) {\n  var order = _ref6.order;\n  var method = order.shipping_lines[0] ? order.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n  return __jsx(TableCell, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, !!method && __jsx(Tooltip, {\n    title: method,\n    TransitionComponent: Fade,\n    TransitionProps: {\n      timeout: 600\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, method == \"Retrait en point de vente\" ? __jsx(HouseOutlinedIcon, {\n    fontSize: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }) : __jsx(LocalShippingIcon, {\n    fontSize: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default withSnackbar(OrderItem);","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderItem.tsx"],"names":["React","useState","TableCell","TableRow","StatusSelector","axios","LocalShippingIcon","HouseOutlinedIcon","Tooltip","Fade","withSnackbar","OrderItem","props","order","id","IdCell","NameCell","firstName","billing","first_name","charAt","toUpperCase","slice","toLowerCase","lastName","last_name","PriceCell","total","StatusCell","enqueueSnackbar","status","setStatus","handleChange","event","target","value","put","rep","console","log","data","variant","anchorOrigin","vertical","horizontal","borderRadius","DateCell","date","Date","date_created","min","getMinutes","toString","padStart","hh","getHours","dd","getDate","mm","getMonth","yyyy","getFullYear","MethodCell","method","shipping_lines","method_title","timeout"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport StatusSelector from './StatusSelector';\nimport axios from 'axios';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport HouseOutlinedIcon from '@material-ui/icons/HouseOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport { withSnackbar, WithSnackbarProps } from 'notistack';\n\ninterface OrderItemProps extends WithSnackbarProps {\n    order: any,\n}\n\nconst OrderItem: React.FC<OrderItemProps> = (props) => {\n    const { order } = props;\n    return (\n            order && (\n            <TableRow key={order.id}>\n            <IdCell {...props }/>\n            <NameCell {...props }/>\n            <PriceCell {...props }/>\n            <StatusCell {...props }/>\n            <DateCell {...props} />\n            <MethodCell {...props }/>\n            </TableRow>\n            )\n    );\n}\n\nconst IdCell: React.FC<OrderItemProps> = ({ order }) => {\n    return (\n        <TableCell>{order.id}</TableCell>\n    );\n}\n\nconst NameCell: React.FC<OrderItemProps> = ({ order }) => {\n    const firstName = order.billing.first_name.charAt(0).toUpperCase() + order.billing.first_name.slice(1).toLowerCase();\n    const lastName = order.billing.last_name.charAt(0).toUpperCase() + order.billing.last_name.slice(1).toLowerCase();\n    return (\n        <TableCell>{firstName} {lastName}</TableCell>\n    );\n}\n\nconst PriceCell: React.FC<OrderItemProps> = ({ order }) => {\n    return (\n        <TableCell>{order.total}€</TableCell>\n    );\n}\n\nconst StatusCell: React.FC<OrderItemProps> = ({order, enqueueSnackbar}) => {\n    const [status, setStatus] = useState(order.status);\n\n    const handleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const status = event.target.value;\n        const rep = await axios.put(`http://localhost:3000/api/updateOrder?id=${order.id}&status=${status}`);\n        console.log(\"ok\")\n        if (rep.data.status == event.target.value) {\n            setStatus(event.target.value as string);\n            enqueueSnackbar('Mise à jour réussie', { \n                variant: 'success',\n                anchorOrigin: { vertical: 'bottom', horizontal: 'right'}\n            });\n        }\n        else\n            enqueueSnackbar('Erreur de connexion au serveur', { \n                variant: 'error',\n                anchorOrigin: { vertical: 'bottom', horizontal: 'right'}\n            });\n      };\n \n    return (\n        <TableCell style={{ borderRadius:10 }}>\n            <StatusSelector status={status} handleChange={handleChange}/>\n        </TableCell>\n    );\n}\n\nconst DateCell: React.FC<OrderItemProps> = ({ order }) => {\n    const date:Date = new Date(order.date_created);\n    const min = date.getMinutes().toString().padStart(2, \"0\");\n    const hh = date.getHours().toString().padStart(2, \"0\");\n    const dd = date.getDate().toString().padStart(2, \"0\");\n    const mm = (date.getMonth()+1).toString().padStart(2, \"0\");\n    const yyyy = date.getFullYear().toString().padStart(2, \"0\");\n    return (\n        <TableCell>{`${dd}-${mm}-${yyyy} ${hh}:${min}`}</TableCell>\n    );\n}\n\nconst MethodCell: React.FC<OrderItemProps> = ({ order }) => {\n    const method = order.shipping_lines[0] ? order.shipping_lines[0].method_title : 'Aucune méthode renseignée';\n    return (\n        <TableCell align=\"center\">\n            { (!!method) &&\n                <Tooltip \n                    title={method}\n                    TransitionComponent={Fade} \n                    TransitionProps={{ timeout: 600 }}\n                >\n                {method == \"Retrait en point de vente\" ? (\n                        <HouseOutlinedIcon fontSize='large'/>\n                ) : (\n                    <LocalShippingIcon fontSize='large'/>\n                )}\n                </Tooltip>\n            }\n        </TableCell>\n    );\n}\n\nexport default withSnackbar(OrderItem);"]},"metadata":{},"sourceType":"module"}