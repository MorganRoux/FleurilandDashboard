{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderTable.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\nimport { sortById, sortByName, sortByTotal, sortByStatus, sortByDate, sortByMethod } from './sorters';\nimport { TableSortLabel } from '@material-ui/core';\n\nvar OrderHead = function OrderHead(_ref) {\n  var orderBy = _ref.orderBy,\n      orderDir = _ref.orderDir,\n      setOrderBy = _ref.setOrderBy,\n      setOrderDir = _ref.setOrderDir;\n  var heads = [\"N°\", \"Nom\", \"Total\", \"Status\", \"Date de commande\", \"Expédition\"];\n\n  var createSortHandler = function createSortHandler(id) {\n    console.log(id);\n    if (orderBy == id) setOrderDir(orderDir == 'asc' ? 'desc' : 'asc');else {\n      setOrderBy(id);\n      setOrderDir('asc');\n    }\n  };\n\n  return __jsx(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, heads.map(function (name, id) {\n    return __jsx(TableCell, {\n      key: id,\n      align: name == \"Expédition\" ? \"center\" : \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, __jsx(TableSortLabel, {\n      active: orderBy === id,\n      direction: orderBy === id ? orderDir : 'asc',\n      onClick: function onClick() {\n        return createSortHandler(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, name));\n  })));\n};\n\nvar OrderTable = function OrderTable(props) {\n  var orders = props.orders,\n      searchtext = props.searchtext;\n\n  var _useState = useState(0),\n      orderBy = _useState[0],\n      setOrderBy = _useState[1];\n\n  var _useState2 = useState('desc'),\n      orderDir = _useState2[0],\n      setOrderDir = _useState2[1];\n\n  var sorters = [sortById, sortByName, sortByTotal, sortByStatus, sortByDate, sortByMethod];\n\n  var getSortHandler = function getSortHandler(orderBy, orderDir) {\n    return function (elmt1, elmt2) {\n      var ret = sorters[orderBy](elmt1, elmt2); //elmt1.id <= elmt2.id ? -1 : 1;\n\n      return orderDir == 'asc' ? ret : -ret;\n    };\n  };\n\n  return __jsx(\"div\", _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), __jsx(Table, {\n    stickyHeader: true,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(OrderHead, {\n    orderBy: orderBy,\n    orderDir: orderDir,\n    setOrderBy: setOrderBy,\n    setOrderDir: setOrderDir,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, orders.filter(function (order) {\n    var text = searchtext.toLowerCase();\n    var firstName = order.billing.first_name.toLowerCase();\n    var lastName = order.billing.last_name.toLowerCase();\n    var id = order.id.toString();\n    return id.includes(text) || lastName.includes(text) || firstName.includes(text);\n  }).sort(getSortHandler(orderBy, orderDir)).map(function (order) {\n    return __jsx(OrderItem, {\n      key: order.id,\n      order: order,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    });\n  }))));\n};\n\nexport default OrderTable;","map":{"version":3,"sources":["/Users/Morgan/Programmation/ReactJS/FleurilandDashboard/client/src/components/Orders/OrderTable.tsx"],"names":["React","useState","Table","TableBody","TableCell","TableHead","TableRow","OrderItem","sortById","sortByName","sortByTotal","sortByStatus","sortByDate","sortByMethod","TableSortLabel","OrderHead","orderBy","orderDir","setOrderBy","setOrderDir","heads","createSortHandler","id","console","log","map","name","OrderTable","props","orders","searchtext","sorters","getSortHandler","elmt1","elmt2","ret","filter","order","text","toLowerCase","firstName","billing","first_name","lastName","last_name","toString","includes","sort"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport OrderItem from './OrderItem';\nimport { sortById, sortByName, sortByTotal, sortByStatus, sortByDate, sortByMethod } from './sorters';\nimport { TableSortLabel } from '@material-ui/core';\n\ninterface TableProps {\n    orders:any\n    searchtext: string\n}\n\ninterface HeadProps {\n    orderBy: number\n    orderDir: \"desc\" | \"asc\"\n    setOrderBy\n    setOrderDir\n}\n\nconst OrderHead: React.FC<HeadProps> = ({orderBy, orderDir, setOrderBy, setOrderDir}) => {\n    const heads:string[]= [\"N°\", \"Nom\", \"Total\", \"Status\", \"Date de commande\", \"Expédition\"];\n    const createSortHandler = (id) => {\n        console.log(id);\n        if (orderBy == id)\n            setOrderDir(orderDir == 'asc' ? 'desc' : 'asc');\n        else {\n            setOrderBy(id);\n            setOrderDir('asc');\n        }\n    };\n    return (\n        <TableHead>\n            <TableRow>\n                {heads.map((name:string, id: number) => (\n                <TableCell \n                    key={id}\n                    align = {name==\"Expédition\" ? \"center\" : \"left\"}\n                >\n                    <TableSortLabel\n                        active={orderBy === id}\n                        direction={orderBy === id ? orderDir : 'asc'}\n                        onClick={() => createSortHandler(id)}\n                    >\n                    {name}\n                    </TableSortLabel>\n                </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst OrderTable: React.FC<TableProps> = (props) => {\n    const { orders, searchtext } = props;\n    const [orderBy, setOrderBy] = useState<number>(0);\n    const [orderDir, setOrderDir] = useState<\"desc\" | \"asc\">('desc');\n    const sorters = [sortById, sortByName, sortByTotal, sortByStatus, sortByDate, sortByMethod];\n    const getSortHandler = (orderBy, orderDir) => { return (\n        (elmt1: any, elmt2: any) =>  {\n\n            const ret = sorters[orderBy](elmt1,elmt2); //elmt1.id <= elmt2.id ? -1 : 1;\n            return (orderDir == 'asc' ? ret : -ret);\n        }\n    )}\n    return (\n        <div {...props}>\n        <Table stickyHeader size=\"small\">\n            <OrderHead orderBy={orderBy} orderDir={orderDir} setOrderBy={setOrderBy} setOrderDir={setOrderDir}/>\n            <TableBody>\n                {orders.filter((order) => {\n                    const text = searchtext.toLowerCase();\n                    const firstName = order.billing.first_name.toLowerCase();\n                    const lastName = order.billing.last_name.toLowerCase();\n                    const id = order.id.toString();\n                    return (\n                        id.includes(text) || lastName.includes(text) || firstName.includes(text)\n                    );\n                }).sort(getSortHandler(orderBy, orderDir)).map((order) => {\n                    return (\n                    <OrderItem \n                        key = {order.id}\n                        order={order}\n                    />)}\n                )}\n            </TableBody>\n        </Table>\n        </div>\n)}\n   \nexport default OrderTable;"]},"metadata":{},"sourceType":"module"}